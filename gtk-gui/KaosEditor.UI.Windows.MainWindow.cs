
// This file has been generated by the GUI designer. Do not modify.
namespace KaosEditor.UI.Windows
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action ApplicationAction;
		private global::Gtk.Action quitAction;
		private global::Gtk.Action ModelAction;
		private global::Gtk.Action saveAction;
		private global::Gtk.Action openAction;
		private global::Gtk.Action saveAsAction;
		private global::Gtk.VBox mainVBox;
		private global::Gtk.MenuBar mainMenu;
		private global::Gtk.HPaned hpaned1;
		private global::Gtk.Statusbar statusBar;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget KaosEditor.UI.Windows.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.ApplicationAction = new global::Gtk.Action ("ApplicationAction", global::Mono.Unix.Catalog.GetString ("Application"), null, null);
			this.ApplicationAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Application");
			w1.Add (this.ApplicationAction, null);
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
			w1.Add (this.quitAction, null);
			this.ModelAction = new global::Gtk.Action ("ModelAction", global::Mono.Unix.Catalog.GetString ("Model"), null, null);
			this.ModelAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Model");
			w1.Add (this.ModelAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("_Save"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Save");
			w1.Add (this.saveAction, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Open"), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Open");
			w1.Add (this.openAction, null);
			this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Save _As"), null, "gtk-save-as");
			this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save _As");
			w1.Add (this.saveAsAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "KaosEditor.UI.Windows.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("A simple Kaos Editor");
			this.WindowPosition = ((global::Gtk.WindowPosition)(3));
			this.DefaultWidth = 800;
			this.DefaultHeight = 600;
			// Container child KaosEditor.UI.Windows.MainWindow.Gtk.Container+ContainerChild
			this.mainVBox = new global::Gtk.VBox ();
			this.mainVBox.Name = "mainVBox";
			// Container child mainVBox.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='mainMenu'><menu name='ApplicationAction' action='ApplicationAction'><menuitem name='quitAction' action='quitAction'/></menu><menu name='ModelAction' action='ModelAction'><menuitem name='openAction' action='openAction'/><separator/><menuitem name='saveAction' action='saveAction'/><menuitem name='saveAsAction' action='saveAsAction'/></menu></menubar></ui>");
			this.mainMenu = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/mainMenu")));
			this.mainMenu.Name = "mainMenu";
			this.mainVBox.Add (this.mainMenu);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.mainMenu]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child mainVBox.Gtk.Box+BoxChild
			this.hpaned1 = new global::Gtk.HPaned ();
			this.hpaned1.CanFocus = true;
			this.hpaned1.Name = "hpaned1";
			this.hpaned1.Position = 250;
			this.hpaned1.BorderWidth = ((uint)(6));
			this.mainVBox.Add (this.hpaned1);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.hpaned1]));
			w3.Position = 1;
			// Container child mainVBox.Gtk.Box+BoxChild
			this.statusBar = new global::Gtk.Statusbar ();
			this.statusBar.Name = "statusBar";
			this.statusBar.Spacing = 6;
			this.mainVBox.Add (this.statusBar);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.mainVBox [this.statusBar]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			this.Add (this.mainVBox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
			this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
			this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
			this.saveAsAction.Activated += new global::System.EventHandler (this.OnSaveAsActionActivated);
		}
	}
}
