
declare goal
  id avoid_miners_drown
  name "Avoid [Miners Drown]"
  refinedby avoid_mine_flooded, miners_out_when_high_water
end

declare goal
  id avoid_mine_flooded
  name "Avoid [Mine Flooded]"
  refinedby pump_on_when_high_water, pump_on_when_switch_on
end

declare goal
  id pump_on_when_high_water
  name "Immediate Achieve [Pump Switch On When High Water Signal On]"
  formalspec when HighWaterSignal() then next PumpSwitchOn()
  obstructedby pump_switch_broken_and_high_water
end

  declare obstacle
    id pump_switch_broken_and_high_water
    name "Pump Switch Broken And High Water Signal On"
    formalspec sooner-or-later ( HighWaterSignal() and PumpSwitchBroken() )
    resolvedby(prevention) avoid_switch_broken
    resolvedby(restoration) restore_pump_switch
    resolvedby(weak_mitigation[avoid_miners_drown]) evacuate_miner_when_switch_broken
  end
  
    declare goal
      id avoid_switch_broken
      name "Avoid [Pump Switch Broken And High Water Signal On]"
      formalspec when HighWaterSignal() then not PumpSwitchBroken()
    end
    
    declare goal
      id restore_pump_switch
      name "Achieve [Pump Switch On When Pump Switch Broken And High Water Signal On]"
      formalspec when HighWaterSignal() and PumpSwitchBroken() then sooner-or-later, before 2 minutes, PumpSwitchOn()
    end
    
    declare goal
      id evacuate_miner_when_switch_broken
      name "Achieve [Miners Evacuated When Pump Switch Broken And High Water Signal On]"
      formalspec when HighWaterSignal() and PumpSwitchBroken() then sooner-or-later, before 2 minutes, PumpSwitchOn()
    end

declare goal
  id pump_on_when_high_water_bis
  name "Immediate Achieve [Pump Switch On When High Water Signal On]"
  formalspec when HighWaterSignal() then next PumpSwitchOn()
  refinedby pump_on_when_high_water_and_switch_not_broken, avoid_switch_broken_bis
end
  
  declare goal
    id pump_on_when_high_water_and_switch_not_broken
    name "Immediate Achieve [Pump Switch On When High Water Signal On And Switch Not Broken]"
    formalspec when HighWaterSignal() and not PumpSwitchBroken() then next PumpSwitchOn()
  end
  
  declare goal
    id avoid_switch_broken_bis
    name "Avoid [Pump Switch Broken And High Water Signal On]"
    formalspec when HighWaterSignal() then not PumpSwitchBroken()
  end
  
declare goal
  id pump_on_when_high_water_tris
  name "Achieve [Pump Switch On When High Water Signal On]"
  formalspec when HighWaterSignal() then next PumpSwitchOn()
  refinedby restore_pump_switch_tris, immediate_pump_on_when_high_water_tris
end

  declare goal
    id restore_pump_switch_tris
    name "Achieve [Pump Switch On When Pump Switch Broken And High Water Signal On]"
    formalspec when HighWaterSignal() and PumpSwitchBroken() then sooner-or-later, before 2 minutes, PumpSwitchOn()
  end

  declare goal
    id immediate_pump_on_when_high_water_tris
    name "Immediate Achieve [Pump Switch On When High Water Signal On]"
    formalspec when HighWaterSignal() then next PumpSwitchOn()
  end


###### 

declare goal
  id miners_out_when_high_water
  name "Achieve [Miners Evacuated When High Water Signal On]"
  formalspec when HighWaterSignal() then sooner-or-later, before 5 minutes, not MinerInside()
  obstructedby doors_locked_and_high_water
end

  declare obstacle
    id doors_locked_and_high_water
    name "Doors Locked And High Water Signal On"
    formalspec sooner-or-later ( HighWaterSignal() and always, for strictly more than 5 minutes, DoorsLocked() )
    resolvedby(prevention) avoid_doors_locked
    resolvedby(restoration) achieve_miners_out_when_high_water_and_doors_locked
  end
  
    declare goal
      id avoid_doors_locked
      name "Avoid [Doors Locked And High Water Signal On]"
      formalspec when HighWaterSignal() then sooner-or-later, before 5 minutes, not DoorsLocked()
    end
  
    declare goal
      id achieve_miners_out_when_high_water_and_doors_locked
      name "Achieve [Miners Evacuated When Doors Locked And High Water Signal On]"
      formalspec when HighWaterSignal() 
                      and always, for strictly more than 5 minutes, DoorsLocked() 
                 then sooner-or-later, before 10 minutes, not MinerInside()
    end

declare goal
  id miners_out_when_high_water_bis
  name "Achieve [Miners Evacuated When High Water Signal On]"
  formalspec when HighWaterSignal() then sooner-or-later, before 5 minutes, not MinerInside()
  refinedby miners_out_when_high_water_and_doors_not_locked, avoid_doors_locked_bis
end

  declare goal
    id miners_out_when_high_water_and_doors_not_locked
    name "Achieve [Miners Evacuated When High Water Signal On And Doors Not Locked]"
    formalspec when HighWaterSignal() 
                    and sooner-or-later, before 5 minutes, not DoorsLocked() 
               then sooner-or-later, before 5 minutes, not MinerInside()
  end
  
  declare goal
    id avoid_doors_locked_bis
    name "Avoid [Doors Locked And High Water Signal On]"
    formalspec when HighWaterSignal() then sooner-or-later, before 5 minutes, not DoorsLocked()
  end

declare goal
  id miners_out_when_high_water_tris
  name "Achieve [Miners Evacuated When High Water Signal On]"
  refinedby miners_out_when_high_water_and_doors_not_locked_tris, 
            achieve_miners_out_when_high_water_and_doors_locked_tris
end

  declare goal
    id miners_out_when_high_water_and_doors_not_locked_tris
    name "Achieve [Miners Evacuated When High Water Signal On And Doors Not Locked]"
    formalspec when HighWaterSignal() 
                    and sooner-or-later, before 5 minutes, not DoorsLocked() 
               then sooner-or-later, before 5 minutes, not MinerInside()
  end
  
  declare goal
    id achieve_miners_out_when_high_water_and_doors_locked_tris
    name "Achieve [Miners Evacuated When Doors Locked And High Water Signal On]"
    formalspec when HighWaterSignal() 
                    and always, for strictly more than 5 minutes, DoorsLocked() 
               then sooner-or-later, before 10 minutes, not MinerInside()
  end

###### 

declare goal
  id pump_on_when_switch_on
  name "Maintain [Pump On When Switch On]"
  formalspec when PumpSwitchOn() then PumpMotorOn()
  obstructedby pump_broken_when_switch_on
  obstructedby power_outage
end

  declare obstacle
    id pump_broken_when_switch_on
    name "Pump Motor Broken And Pump Switch On"
    formalspec sooner-or-later ( PumpSwitchOn() and PumpMotorBroken() )
    resolvedby(prevention) avoid_motor_broken
  end
  
    declare goal
      id avoid_motor_broken
      name "Avoid [Pump Motor Broken And Pump Motor Switch On]"
      formalspec when PumpSwitchOn() then not PumpMotorBroken()
    end

  declare obstacle
    id power_outage
    name "Power Outage And Pump Switch On"
    formalspec sooner-or-later ( PumpSwitchOn() and not PowerAvailable() )
    resolvedby(restoration) restore_power
  end
  
    declare goal
      id restore_power
      name "Achieve [Power Restored When Outage]"
      formalspec when not PowerAvailable() then sooner-or-later PowerAvailable()
    end

declare goal
  id pump_on_when_switch_on_bis
  name "Maintain [Pump On When Switch On]"
  formalspec when PumpSwitchOn() then PumpMotorOn()
  refinedby avoid_motor_broken_bis, pump_on_when_switch_on_and_motor_not_broken
end

  declare goal
    id pump_on_when_switch_on_and_motor_not_broken
    name "Maintain [Pump On When Switch On And Motor Not Broken]"
    formalspec when PumpSwitchOn() then PumpMotorOn()
  end

  declare goal
    id avoid_motor_broken_bis
    name "Avoid [Pump Motor Broken And Pump Motor Switch On]"
    formalspec when PumpSwitchOn() then not PumpMotorBroken()
  end
