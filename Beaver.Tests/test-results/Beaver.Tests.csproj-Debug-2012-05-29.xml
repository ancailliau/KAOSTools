<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2012-05-29T15:58:38</TestDate>
      <Passed>1</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>21</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 1.83ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T15:58:59</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>21</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 2.02ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:19:06</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:19:12</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:20:29</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:21:18</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:22:07</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:22:19</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:22:44</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Method not found: 'NUnit.Core.ProxyTestRunner.Load'.</Message>
      <StackTrace>  at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke (System.Runtime.Remoting.Proxies.RealProxy rp, IMessage msg, System.Exception&amp; exc, System.Object[]&amp; out_args) [0x001f0] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Runtime.Remoting.Proxies/RealProxy.cs:247 </StackTrace>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2012-05-29T16:25:08</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>21</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 1.97ms</Message>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="Beaver">
      <Results>
        <UnitTestResult>
          <TestDate>2012-05-29T15:58:38</TestDate>
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>21</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 1.82ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2012-05-29T15:58:59</TestDate>
          <Passed>0</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>21</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 2.01ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2012-05-29T16:25:08</TestDate>
          <Passed>0</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>21</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 1.97ms</Message>
        </UnitTestResult>
      </Results>
      <Tests>
        <TestRecord Name="Tests">
          <Results>
            <UnitTestResult>
              <TestDate>2012-05-29T15:58:38</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>21</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 1.82ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2012-05-29T15:58:59</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>21</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 1.99ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2012-05-29T16:25:08</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>21</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 1.96ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Features">
              <Results>
                <UnitTestResult>
                  <TestDate>2012-05-29T15:58:38</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>21</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 1.77ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2012-05-29T15:58:59</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>21</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 1.98ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2012-05-29T16:25:08</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>21</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 1.93ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="ConsistencyForGoalModelsFeature">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>1</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.30ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:59</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>1</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.28ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:08</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>1</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.31ms</Message>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="RemoveElementFromAllViews">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model with element")]
    public void GivenAModelWithElement()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is no longer referenced in views")]
    public void ThenTheElementIsNoLongerReferencedInViews()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is removed from the model")]
    public void ThenTheElementIsRemovedFromTheModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I delete an element")]
    public void WhenIDeleteAnElement()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:35
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.RemoveElementFromAllViews () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:12
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model with element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model with element")]
        public void GivenAModelWithElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I delete an element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I delete an element")]
        public void WhenIDeleteAnElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the element is removed from the model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is removed from the model")]
        public void ThenTheElementIsRemovedFromTheModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the element is no longer referenced in views
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is no longer referenced in views")]
        public void ThenTheElementIsNoLongerReferencedInViews()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model with element")]
    public void GivenAModelWithElement()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is no longer referenced in views")]
    public void ThenTheElementIsNoLongerReferencedInViews()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is removed from the model")]
    public void ThenTheElementIsRemovedFromTheModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I delete an element")]
    public void WhenIDeleteAnElement()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:35
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.RemoveElementFromAllViews () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:12
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model with element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model with element")]
        public void GivenAModelWithElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I delete an element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I delete an element")]
        public void WhenIDeleteAnElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the element is removed from the model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is removed from the model")]
        public void ThenTheElementIsRemovedFromTheModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the element is no longer referenced in views
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is no longer referenced in views")]
        public void ThenTheElementIsNoLongerReferencedInViews()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model with element")]
    public void GivenAModelWithElement()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is no longer referenced in views")]
    public void ThenTheElementIsNoLongerReferencedInViews()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the element is removed from the model")]
    public void ThenTheElementIsRemovedFromTheModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I delete an element")]
    public void WhenIDeleteAnElement()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:35
at Beaver.Tests.Features.ConsistencyForGoalModelsFeature.RemoveElementFromAllViews () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/consistency.feature:12
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model with element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model with element")]
        public void GivenAModelWithElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I delete an element
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I delete an element")]
        public void WhenIDeleteAnElement()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the element is removed from the model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is removed from the model")]
        public void ThenTheElementIsRemovedFromTheModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the element is no longer referenced in views
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the element is no longer referenced in views")]
        public void ThenTheElementIsNoLongerReferencedInViews()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                  </Tests>
                </TestRecord>
                <TestRecord Name="ElementsFeature">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.08ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:59</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.10ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:08</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.10ms</Message>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="AddElementInModel">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model contains 'goal-1'")]
    public void ThenTheModelContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a goal 'goal-1'")]
    public void WhenIAddAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.AddElementInModel () [0x00037] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:13
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a goal 'goal-1'")]
        public void WhenIAddAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains 'goal-1'")]
        public void ThenTheModelContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model contains 'goal-1'")]
    public void ThenTheModelContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a goal 'goal-1'")]
    public void WhenIAddAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.AddElementInModel () [0x00037] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:13
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a goal 'goal-1'")]
        public void WhenIAddAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains 'goal-1'")]
        public void ThenTheModelContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model contains 'goal-1'")]
    public void ThenTheModelContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a goal 'goal-1'")]
    public void WhenIAddAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.AddElementInModel () [0x00037] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:13
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a goal 'goal-1'")]
        public void WhenIAddAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains 'goal-1'")]
        public void ThenTheModelContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="RemoveElementFromModel">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains 'goal-1'")]
    public void ThenTheModelDoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1'")]
    public void WhenIRemoveGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.RemoveElementFromModel () [0x00046] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:18
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1'")]
        public void WhenIRemoveGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains 'goal-1'")]
        public void ThenTheModelDoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains 'goal-1'")]
    public void ThenTheModelDoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1'")]
    public void WhenIRemoveGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.RemoveElementFromModel () [0x00046] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:18
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1'")]
        public void WhenIRemoveGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains 'goal-1'")]
        public void ThenTheModelDoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains 'goal-1'")]
    public void ThenTheModelDoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1'")]
    public void WhenIRemoveGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ElementsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:35
at Beaver.Tests.Features.ElementsFeature.RemoveElementFromModel () [0x00046] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/elements.feature:18
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1'")]
        public void WhenIRemoveGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains 'goal-1'")]
        public void ThenTheModelDoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                  </Tests>
                </TestRecord>
                <TestRecord Name="Feature">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.23ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:59</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.25ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:08</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>2</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.27ms</Message>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="MilestoneRefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>2</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.20ms</Message>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>2</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.22ms</Message>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>2</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.25ms</Message>
                        </UnitTestResult>
                      </Results>
                      <Tests>
                        <TestRecord Name="String[])">
                          <Results>
                            <UnitTestResult>
                              <TestDate>2012-05-29T15:58:38</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 97%")]
    public void ThenGoal_1HasAProbabilityOf97()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a milestone-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 97%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 97%")]
        public void ThenGoal_1HasAProbabilityOf97()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                            <UnitTestResult>
                              <TestDate>2012-05-29T15:58:38</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 98\.5%")]
    public void ThenGoal_1HasAProbabilityOf98_5()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a equitable case-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 98.5%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 98\.5%")]
        public void ThenGoal_1HasAProbabilityOf98_5()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                            <UnitTestResult>
                              <TestDate>2012-05-29T15:58:59</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 97%")]
    public void ThenGoal_1HasAProbabilityOf97()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a milestone-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 97%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 97%")]
        public void ThenGoal_1HasAProbabilityOf97()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                            <UnitTestResult>
                              <TestDate>2012-05-29T15:58:59</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 98\.5%")]
    public void ThenGoal_1HasAProbabilityOf98_5()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a equitable case-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 98.5%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 98\.5%")]
        public void ThenGoal_1HasAProbabilityOf98_5()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                            <UnitTestResult>
                              <TestDate>2012-05-29T16:25:08</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 97%")]
    public void ThenGoal_1HasAProbabilityOf97()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a milestone-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a milestone-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAMilestone_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 97%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 97%")]
        public void ThenGoal_1HasAProbabilityOf97()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                            <UnitTestResult>
                              <TestDate>2012-05-29T16:25:08</TestDate>
                              <Passed>0</Passed>
                              <Errors>0</Errors>
                              <Failures>0</Failures>
                              <Inconclusive>1</Inconclusive>
                              <NotRunnable>0</NotRunnable>
                              <Skipped>0</Skipped>
                              <Ignored>0</Ignored>
                              <Time />
                              <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
    public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-3'")]
    public void GivenAGoalGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
    public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'obstacle-1' obstructs 'goal-3'")]
    public void GivenObstacle_1ObstructsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-2'")]
    public void GivenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-3'")]
    public void GivenRefinement_1ContainsGoal_3()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'goal-1' has a probability of 98\.5%")]
    public void ThenGoal_1HasAProbabilityOf98_5()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I run a simulation")]
    public void WhenIRunASimulation()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                              <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.Feature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:35
at Beaver.Tests.Features.Feature.MilestoneRefinement (string,string,string[]) [0x00070] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/probability.feature:20
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                              <ConsoleOutput>Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-3'")]
        public void GivenAGoalGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1' with a probability of 3%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1' with a probability of 3%")]
        public void GivenAnObstacleObstacle_1WithAProbabilityOf3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'obstacle-1' obstructs 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'obstacle-1' obstructs 'goal-3'")]
        public void GivenObstacle_1ObstructsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a equitable case-driven refinement 'refinement-1' for 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a equitable case-driven refinement 'refinement-1' for 'goal-1'")]
        public void GivenAEquitableCase_DrivenRefinementRefinement_1ForGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-2'")]
        public void GivenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-3'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-3'")]
        public void GivenRefinement_1ContainsGoal_3()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I run a simulation
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I run a simulation")]
        public void WhenIRunASimulation()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'goal-1' has a probability of 98.5%
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'goal-1' has a probability of 98\.5%")]
        public void ThenGoal_1HasAProbabilityOf98_5()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                              <ConsoleError />
                            </UnitTestResult>
                          </Results>
                          <Tests />
                        </TestRecord>
                      </Tests>
                    </TestRecord>
                  </Tests>
                </TestRecord>
                <TestRecord Name="UsabilityForModelingFeature">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>12</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.79ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:59</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>12</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.96ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:08</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>12</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.88ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:39</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>12</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 1.43ms</Message>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="ConnectADomainPropertyAndAGoal">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
    public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'domprop-1'")]
    public void WhenIConnectGoal_1ToDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:29
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'domprop-1'")]
        public void WhenIConnectGoal_1ToDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created with 'goal-1' and 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
        public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
    public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'domprop-1'")]
    public void WhenIConnectGoal_1ToDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:29
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'domprop-1'")]
        public void WhenIConnectGoal_1ToDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created with 'goal-1' and 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
        public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
    public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'domprop-1'")]
    public void WhenIConnectGoal_1ToDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:29
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'domprop-1'")]
        public void WhenIConnectGoal_1ToDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created with 'goal-1' and 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
        public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
    public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'domprop-1'")]
    public void WhenIConnectGoal_1ToDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:29
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'domprop-1'")]
        public void WhenIConnectGoal_1ToDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created with 'goal-1' and 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created with 'goal-1' and 'domprop-1'")]
        public void ThenANewRefinementIsCreatedWithGoal_1AndDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectADomainPropertyAndAnObstacleRefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:59
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:59
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:59
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:59
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectADomainPropertyAndARefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndARefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:53
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndARefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:53
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndARefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:53
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a domain property 'domprop-1'")]
    public void GivenADomainPropertyDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'domprop-1'")]
    public void ThenRefinement_1ContainsDomprop_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'domprop-1' to 'refinement-1'")]
    public void WhenIConnectDomprop_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectADomainPropertyAndARefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:53
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a domain property 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a domain property 'domprop-1'")]
        public void GivenADomainPropertyDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'domprop-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'domprop-1' to 'refinement-1'")]
        public void WhenIConnectDomprop_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'domprop-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'domprop-1'")]
        public void ThenRefinement_1ContainsDomprop_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAGoalAndAGoal">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'goal-2'")]
    public void WhenIConnectGoal_1ToGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAGoalAndAGoal () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:17
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'goal-2'")]
        public void WhenIConnectGoal_1ToGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'goal-2'")]
    public void WhenIConnectGoal_1ToGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAGoalAndAGoal () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:17
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'goal-2'")]
        public void WhenIConnectGoal_1ToGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'goal-2'")]
    public void WhenIConnectGoal_1ToGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAGoalAndAGoal () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:17
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'goal-2'")]
        public void WhenIConnectGoal_1ToGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'goal-2'")]
    public void WhenIConnectGoal_1ToGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAGoalAndAGoal () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:17
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'goal-2'")]
        public void WhenIConnectGoal_1ToGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAnAgentAndAGoal">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an agent 'agent-1'")]
    public void GivenAnAgentAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'agent-1' is assigned to 'goal-1'")]
    public void ThenAgent_1IsAssignedToGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'agent-1'")]
    public void WhenIConnectGoal_1ToAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnAgentAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:23
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an agent 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an agent 'agent-1'")]
        public void GivenAnAgentAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'agent-1'")]
        public void WhenIConnectGoal_1ToAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'agent-1' is assigned to 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'agent-1' is assigned to 'goal-1'")]
        public void ThenAgent_1IsAssignedToGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an agent 'agent-1'")]
    public void GivenAnAgentAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'agent-1' is assigned to 'goal-1'")]
    public void ThenAgent_1IsAssignedToGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'agent-1'")]
    public void WhenIConnectGoal_1ToAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnAgentAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:23
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an agent 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an agent 'agent-1'")]
        public void GivenAnAgentAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'agent-1'")]
        public void WhenIConnectGoal_1ToAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'agent-1' is assigned to 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'agent-1' is assigned to 'goal-1'")]
        public void ThenAgent_1IsAssignedToGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an agent 'agent-1'")]
    public void GivenAnAgentAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'agent-1' is assigned to 'goal-1'")]
    public void ThenAgent_1IsAssignedToGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'agent-1'")]
    public void WhenIConnectGoal_1ToAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnAgentAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:23
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an agent 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an agent 'agent-1'")]
        public void GivenAnAgentAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'agent-1'")]
        public void WhenIConnectGoal_1ToAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'agent-1' is assigned to 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'agent-1' is assigned to 'goal-1'")]
        public void ThenAgent_1IsAssignedToGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an agent 'agent-1'")]
    public void GivenAnAgentAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'agent-1' is assigned to 'goal-1'")]
    public void ThenAgent_1IsAssignedToGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'agent-1'")]
    public void WhenIConnectGoal_1ToAgent_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnAgentAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:23
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an agent 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an agent 'agent-1'")]
        public void GivenAnAgentAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'agent-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'agent-1'")]
        public void WhenIConnectGoal_1ToAgent_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'agent-1' is assigned to 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'agent-1' is assigned to 'goal-1'")]
        public void ThenAgent_1IsAssignedToGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAnObstacleAndAGoal">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
    public void ThenTheObstacleObstacle_1ObstructsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'obstacle-1'")]
    public void WhenIConnectGoal_1ToObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'obstacle-1'")]
        public void WhenIConnectGoal_1ToObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the obstacle 'obstacle-1' obstructs 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
        public void ThenTheObstacleObstacle_1ObstructsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
    public void ThenTheObstacleObstacle_1ObstructsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'obstacle-1'")]
    public void WhenIConnectGoal_1ToObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'obstacle-1'")]
        public void WhenIConnectGoal_1ToObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the obstacle 'obstacle-1' obstructs 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
        public void ThenTheObstacleObstacle_1ObstructsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
    public void ThenTheObstacleObstacle_1ObstructsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'obstacle-1'")]
    public void WhenIConnectGoal_1ToObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'obstacle-1'")]
        public void WhenIConnectGoal_1ToObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the obstacle 'obstacle-1' obstructs 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
        public void ThenTheObstacleObstacle_1ObstructsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
    public void ThenTheObstacleObstacle_1ObstructsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'obstacle-1'")]
    public void WhenIConnectGoal_1ToObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'obstacle-1'")]
        public void WhenIConnectGoal_1ToObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the obstacle 'obstacle-1' obstructs 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the obstacle 'obstacle-1' obstructs 'goal-1'")]
        public void ThenTheObstacleObstacle_1ObstructsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAnObstacleAndAnObstacleRefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
    public void ThenTheRefinementRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:73
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the refinement 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
        public void ThenTheRefinementRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
    public void ThenTheRefinementRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:73
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the refinement 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
        public void ThenTheRefinementRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
    public void ThenTheRefinementRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:73
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the refinement 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
        public void ThenTheRefinementRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
    public void ThenTheRefinementRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleAndAnObstacleRefinement () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:73
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the refinement 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the refinement 'refinement-1' contains 'obstacle-1'")]
        public void ThenTheRefinementRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAnObstacleRefinementAndAnObstacle">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacle () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:47
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacle () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:47
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacle () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:47
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'refinement-1'")]
    public void WhenIConnectObstacle_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacle () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:47
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'refinement-1'")]
        public void WhenIConnectObstacle_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAnObstacleRefinementAndAnObstacleRefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-2'")]
    public void GivenAnObstacleRefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'obstacle-1'")]
    public void GivenRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'obstacle-2'")]
    public void GivenRefinement_2ContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacleRefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:97
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-2'")]
        public void GivenAnObstacleRefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'obstacle-1'")]
        public void GivenRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'obstacle-2'")]
        public void GivenRefinement_2ContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-2'")]
    public void GivenAnObstacleRefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'obstacle-1'")]
    public void GivenRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'obstacle-2'")]
    public void GivenRefinement_2ContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacleRefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:97
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-2'")]
        public void GivenAnObstacleRefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'obstacle-1'")]
        public void GivenRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'obstacle-2'")]
        public void GivenRefinement_2ContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-2'")]
    public void GivenAnObstacleRefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'obstacle-1'")]
    public void GivenRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'obstacle-2'")]
    public void GivenRefinement_2ContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacleRefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:97
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-2'")]
        public void GivenAnObstacleRefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'obstacle-1'")]
        public void GivenRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'obstacle-2'")]
        public void GivenRefinement_2ContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-1'")]
    public void GivenAnObstacleRefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle refinement 'refinement-2'")]
    public void GivenAnObstacleRefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'obstacle-1'")]
    public void GivenRefinement_1ContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'obstacle-2'")]
    public void GivenRefinement_2ContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAnObstacleRefinementAndAnObstacleRefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:97
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-1'")]
        public void GivenAnObstacleRefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle refinement 'refinement-2'")]
        public void GivenAnObstacleRefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'obstacle-1'")]
        public void GivenRefinement_1ContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'obstacle-2'")]
        public void GivenRefinement_2ContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectAObstacleAndAnObstacle">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
    public void WhenIConnectObstacle_1ToObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAObstacleAndAnObstacle () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:67
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
        public void WhenIConnectObstacle_1ToObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
    public void WhenIConnectObstacle_1ToObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAObstacleAndAnObstacle () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:67
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
        public void WhenIConnectObstacle_1ToObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
    public void WhenIConnectObstacle_1ToObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAObstacleAndAnObstacle () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:67
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
        public void WhenIConnectObstacle_1ToObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-1'")]
    public void GivenAnObstacleObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"an obstacle 'obstacle-2'")]
    public void GivenAnObstacleObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new obstacle refinement is created")]
    public void ThenANewObstacleRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-1'")]
    public void ThenThisRefinementContainsObstacle_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'obstacle-2'")]
    public void ThenThisRefinementContainsObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
    public void WhenIConnectObstacle_1ToObstacle_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectAObstacleAndAnObstacle () [0x00073] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:67
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given an obstacle 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-1'")]
        public void GivenAnObstacleObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And an obstacle 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"an obstacle 'obstacle-2'")]
        public void GivenAnObstacleObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'obstacle-1' to 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'obstacle-1' to 'obstacle-2'")]
        public void WhenIConnectObstacle_1ToObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new obstacle refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new obstacle refinement is created")]
        public void ThenANewObstacleRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-1'")]
        public void ThenThisRefinementContainsObstacle_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'obstacle-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'obstacle-2'")]
        public void ThenThisRefinementContainsObstacle_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectARefinementAndAGoal">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'refinement-1'")]
    public void WhenIConnectGoal_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:41
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'refinement-1'")]
        public void WhenIConnectGoal_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'refinement-1'")]
    public void WhenIConnectGoal_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:41
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'refinement-1'")]
        public void WhenIConnectGoal_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'refinement-1'")]
    public void WhenIConnectGoal_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:41
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'refinement-1'")]
        public void WhenIConnectGoal_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"'refinement-1' contains 'goal-2'")]
    public void ThenRefinement_1ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'goal-1' to 'refinement-1'")]
    public void WhenIConnectGoal_1ToRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndAGoal () [0x00055] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:41
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'goal-1' to 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'goal-1' to 'refinement-1'")]
        public void WhenIConnectGoal_1ToRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then 'refinement-1' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"'refinement-1' contains 'goal-2'")]
        public void ThenRefinement_1ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="ConnectARefinementAndARefinement">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-2'")]
    public void GivenARefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-1'")]
    public void GivenRefinement_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'goal-2'")]
    public void GivenRefinement_2ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndARefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:85
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-2'")]
        public void GivenARefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-1'")]
        public void GivenRefinement_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'goal-2'")]
        public void GivenRefinement_2ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-2'")]
    public void GivenARefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-1'")]
    public void GivenRefinement_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'goal-2'")]
    public void GivenRefinement_2ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndARefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:85
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-2'")]
        public void GivenARefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-1'")]
        public void GivenRefinement_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'goal-2'")]
        public void GivenRefinement_2ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-2'")]
    public void GivenARefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-1'")]
    public void GivenRefinement_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'goal-2'")]
    public void GivenRefinement_2ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndARefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:85
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-2'")]
        public void GivenARefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-1'")]
        public void GivenRefinement_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'goal-2'")]
        public void GivenRefinement_2ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:39</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a goal 'goal-2'")]
    public void GivenAGoalGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a model")]
    public void GivenAModel()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-1'")]
    public void GivenARefinementRefinement_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a refinement 'refinement-2'")]
    public void GivenARefinementRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-1' contains 'goal-1'")]
    public void GivenRefinement_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"'refinement-2' contains 'goal-2'")]
    public void GivenRefinement_2ContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"a new refinement is created")]
    public void ThenANewRefinementIsCreated()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-1'")]
    public void ThenThisRefinementContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"this refinement contains 'goal-2'")]
    public void ThenThisRefinementContainsGoal_2()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I connect 'refinement-1' to 'refinement-2'")]
    public void WhenIConnectRefinement_1ToRefinement_2()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.UsabilityForModelingFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:35
at Beaver.Tests.Features.UsabilityForModelingFeature.ConnectARefinementAndARefinement () [0x000af] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/easyusage.feature:85
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a model
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a model")]
        public void GivenAModel()
        {
            ScenarioContext.Current.Pending();
        }
    }

Given a refinement 'refinement-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-1'")]
        public void GivenARefinementRefinement_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a refinement 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a refinement 'refinement-2'")]
        public void GivenARefinementRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-2'")]
        public void GivenAGoalGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-1' contains 'goal-1'")]
        public void GivenRefinement_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And 'refinement-2' contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"'refinement-2' contains 'goal-2'")]
        public void GivenRefinement_2ContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I connect 'refinement-1' to 'refinement-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I connect 'refinement-1' to 'refinement-2'")]
        public void WhenIConnectRefinement_1ToRefinement_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then a new refinement is created
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"a new refinement is created")]
        public void ThenANewRefinementIsCreated()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-1'")]
        public void ThenThisRefinementContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And this refinement contains 'goal-2'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"this refinement contains 'goal-2'")]
        public void ThenThisRefinementContainsGoal_2()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                  </Tests>
                </TestRecord>
                <TestRecord Name="ViewsForGoalModelsFeature">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>4</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.16ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:59</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>4</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.20ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2012-05-29T16:25:08</TestDate>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>4</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.20ms</Message>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="AddAView">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Then(@"the model contains a view named 'view-1'")]
    public void ThenTheModelContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a new view 'view-1'")]
    public void WhenIAddANewViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddAView () [0x00031] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:10
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>When I add a new view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a new view 'view-1'")]
        public void WhenIAddANewViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains a view named 'view-1'")]
        public void ThenTheModelContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Then(@"the model contains a view named 'view-1'")]
    public void ThenTheModelContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a new view 'view-1'")]
    public void WhenIAddANewViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddAView () [0x00031] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:10
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>When I add a new view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a new view 'view-1'")]
        public void WhenIAddANewViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains a view named 'view-1'")]
        public void ThenTheModelContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Then(@"the model contains a view named 'view-1'")]
    public void ThenTheModelContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add a new view 'view-1'")]
    public void WhenIAddANewViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddAView () [0x00031] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:10
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>When I add a new view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add a new view 'view-1'")]
        public void WhenIAddANewViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model contains a view named 'view-1'")]
        public void ThenTheModelContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="AddElementToAView">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' contains 'goal-1'")]
    public void ThenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add 'goal-1' to 'view-1'")]
    public void WhenIAddGoal_1ToView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddElementToAView () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:21
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add 'goal-1' to 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add 'goal-1' to 'view-1'")]
        public void WhenIAddGoal_1ToView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' contains 'goal-1'")]
        public void ThenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' contains 'goal-1'")]
    public void ThenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add 'goal-1' to 'view-1'")]
    public void WhenIAddGoal_1ToView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddElementToAView () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:21
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add 'goal-1' to 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add 'goal-1' to 'view-1'")]
        public void WhenIAddGoal_1ToView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' contains 'goal-1'")]
        public void ThenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' contains 'goal-1'")]
    public void ThenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I add 'goal-1' to 'view-1'")]
    public void WhenIAddGoal_1ToView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.AddElementToAView () [0x0004f] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:21
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I add 'goal-1' to 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I add 'goal-1' to 'view-1'")]
        public void WhenIAddGoal_1ToView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' contains 'goal-1'")]
        public void ThenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="RemoveAView">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains a view named 'view-1'")]
    public void ThenTheModelDoesNotContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove the view 'view-1'")]
    public void WhenIRemoveTheViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveAView () [0x00040] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:15
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove the view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove the view 'view-1'")]
        public void WhenIRemoveTheViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains a view named 'view-1'")]
        public void ThenTheModelDoesNotContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains a view named 'view-1'")]
    public void ThenTheModelDoesNotContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove the view 'view-1'")]
    public void WhenIRemoveTheViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveAView () [0x00040] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:15
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove the view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove the view 'view-1'")]
        public void WhenIRemoveTheViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains a view named 'view-1'")]
        public void ThenTheModelDoesNotContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the model does not contains a view named 'view-1'")]
    public void ThenTheModelDoesNotContainsAViewNamedView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove the view 'view-1'")]
    public void WhenIRemoveTheViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveAView () [0x00040] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:15
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove the view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove the view 'view-1'")]
        public void WhenIRemoveTheViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the model does not contains a view named 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the model does not contains a view named 'view-1'")]
        public void ThenTheModelDoesNotContainsAViewNamedView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="RemoveElementFromAView">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:38</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"the view 'view-1' contains 'goal-1'")]
    public void GivenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' does not contains 'goal-1'")]
    public void ThenTheViewView_1DoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1' from 'view-1'")]
    public void WhenIRemoveGoal_1FromView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveElementFromAView () [0x0005e] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:28
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"the view 'view-1' contains 'goal-1'")]
        public void GivenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1' from 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1' from 'view-1'")]
        public void WhenIRemoveGoal_1FromView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' does not contains 'goal-1'")]
        public void ThenTheViewView_1DoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T15:58:59</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"the view 'view-1' contains 'goal-1'")]
    public void GivenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' does not contains 'goal-1'")]
    public void ThenTheViewView_1DoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1' from 'view-1'")]
    public void WhenIRemoveGoal_1FromView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveElementFromAView () [0x0005e] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:28
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"the view 'view-1' contains 'goal-1'")]
        public void GivenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1' from 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1' from 'view-1'")]
        public void WhenIRemoveGoal_1FromView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' does not contains 'goal-1'")]
        public void ThenTheViewView_1DoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2012-05-29T16:25:08</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>1</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a goal 'goal-1'")]
    public void GivenAGoalGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"a view 'view-1'")]
    public void GivenAViewView_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"the view 'view-1' contains 'goal-1'")]
    public void GivenTheViewView_1ContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the view 'view-1' does not contains 'goal-1'")]
    public void ThenTheViewView_1DoesNotContainsGoal_1()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I remove 'goal-1' from 'view-1'")]
    public void WhenIRemoveGoal_1FromView_1()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
                          <StackTrace>at NUnit.Framework.Assert.Inconclusive (string,object[]) &lt;IL 0x00037, 0x0009b&gt;
at (wrapper dynamic-method) object.lambda_method (System.Runtime.CompilerServices.Closure,string,object[]) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestInconclusive (string) &lt;IL 0x00058, 0x000e0&gt;
at TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider.TestPending (string) &lt;IL 0x00002, 0x00013&gt;
at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError (TechTalk.SpecFlow.Infrastructure.TestStatus,string) &lt;IL 0x00027, 0x00046&gt;
at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep () &lt;IL 0x001c0, 0x0041a&gt;
at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors () &lt;IL 0x00006, 0x00019&gt;
at Beaver.Tests.Features.ViewsForGoalModelsFeature.ScenarioCleanup () [0x00000] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:35
at Beaver.Tests.Features.ViewsForGoalModelsFeature.RemoveElementFromAView () [0x0005e] in /Users/acailliau/Projects/KaosEditor/Beaver.Tests/Features/views.feature:28
at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;) &lt;0x00003&gt;
at System.Reflection.MonoMethod.Invoke (object,System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x000d5] in /private/tmp/monobuild/build/BUILD/mono-2.10.9/mcs/class/corlib/System.Reflection/MonoMethod.cs:226
</StackTrace>
                          <ConsoleOutput>Given a view 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a view 'view-1'")]
        public void GivenAViewView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And a goal 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"a goal 'goal-1'")]
        public void GivenAGoalGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

And the view 'view-1' contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"the view 'view-1' contains 'goal-1'")]
        public void GivenTheViewView_1ContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I remove 'goal-1' from 'view-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I remove 'goal-1' from 'view-1'")]
        public void WhenIRemoveGoal_1FromView_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the view 'view-1' does not contains 'goal-1'
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the view 'view-1' does not contains 'goal-1'")]
        public void ThenTheViewView_1DoesNotContainsGoal_1()
        {
            ScenarioContext.Current.Pending();
        }
    }

</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                  </Tests>
                </TestRecord>
              </Tests>
            </TestRecord>
            <TestRecord Name="Test">
              <Results>
                <UnitTestResult>
                  <TestDate>2012-05-29T15:58:38</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.02ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="TestCase">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2012-05-29T15:58:38</TestDate>
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
              </Tests>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>